version: '3.8'
services:
  eureka-server:
    image: eureka-server
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
  train-service:
    image: train-service
    build:
      context: ./train-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - postgres
      - eureka-server
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/traindb
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
  inventory-service:
    image: inventory-service
    build:
      context: ./inventory-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - postgres
      - eureka-server
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/inventorydb
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
  booking-service:
    image: booking-service
    build:
      context: ./booking-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      - postgres
      - kafka
      - eureka-server
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/bookingdb
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
  notification-service:
    image: notification-service
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    depends_on:
      - kafka
      - eureka-server
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
  api-gateway:
    image: api-gateway
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - eureka-server
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
volumes:
  postgres-data: